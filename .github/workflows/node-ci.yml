name: Node.js CI
"on":
  push:
    branches:
      - main-enterprise
  pull_request:
    types:
      - opened
      - synchronize
env:
  DOCKER_IMAGE_NAME: yadhav/safe-settings
  #IMAGE_REGISTRY_URL: docker.pkg.github.com
  IMAGE_REGISTRY_URL: docker.io
  AZURE_RESOURCE_GROUP: aks-actions
  AZURE_AKS_CLUSTER: actionsAKSCluster
  AZURE_LOCATION: '"East US"'
  AZURE_AKS_NAMESPACE: default

jobs:
  build:
    if: ${{ github.actor != 'dependabot'}}
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.rcrelease.outputs.release }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: npm-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ env.cache-name }}-${{ matrix.node-version }}-
            npm-${{ env.cache-name }}-
            npm-
      - run: npm install
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
 #         registry: ${{ env.IMAGE_REGISTRY_URL }} 
      - name: Build Docker Image Locally
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags:  |
            yadhav/safe-settings:main-enterprise
#          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.event.pull_request.head.sha || github.sha }}
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#          repository: yadhav/safe-settings
#          tag_with_ref: true
      - name: Inspect the Docker Image
        run: |
          docker image inspect yadhav/safe-settings:main-enterprise
      - name: Run Functional Tests
        id: functionaltest
        run: |
          docker run --env APP_ID=${{ secrets.APP_ID }} --env PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} --env WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }} -d -p 3000:3000 yadhav/safe-settings:main-enterprise
          sleep 5
          curl http://localhost:3000
      - name: Tag a release 
        id: rcrelease
        uses: actionsdesk/semver@0.6.0-rc.8
        with:
          bump: patch
          prerelease: withBuildNumber
          prelabel: alpha
      - name: Push Docker Image
        if: ${{ success() }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags:  |
            yadhav/safe-settings:${{ steps.rcrelease.outputs.release }}    
                  
  trigger-deployment:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: decyjphr-actions/workflow-trigger@v0.1-alpha
      with:
        workflow: deploy-k8s.yml
        token: ${{ secrets.pat }}
        ref: ${{ github.event.pull_request.head.ref || github.ref }}
        inputs: '{"release": "${{needs.build.outputs.release}}", "status": "passed" }'    
