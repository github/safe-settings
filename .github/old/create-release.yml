name: Create a release
on:
   workflow_dispatch:
#  push:
#    branches:
#      - main-enterprise

   

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    if: ${{ github.actor != 'dependabot'}}
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.finalrelease.outputs.release }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - run: npm install
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2 
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker Image Locally
        uses: docker/build-push-action@master
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags:  |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-enterprise
      - name: Inspect the Docker Image
        run: |
          docker image inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-enterprise
      - name: Run Functional Tests
        id: functionaltest
        run: |
          docker run --env APP_ID=${{ secrets.APP_ID }} --env PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} --env WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }} -d -p 3000:3000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-enterprise
          sleep 10
          curl http://localhost:3000
      - name: Tag a final release 
        id: finalrelease
        uses: actionsdesk/semver@0.6.0-rc.10
        with:
          bump: final
      - name: Push Docker Image
        if: ${{ success() }}
        uses: docker/build-push-action@master
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.finalrelease.outputs.release }}
          platforms: linux/amd64,linux/arm64
          provenance: false
          sbom: false

  #trigger-deployment:
  #  needs: build
  #  runs-on: ubuntu-latest
  #  steps:
  #  - uses: actions/checkout@v2
  #  - uses: decyjphr-actions/workflow-trigger@v0.1-alpha
  #    with:
  #      workflow: deploy-k8s.yml
  #      token: ${{ secrets.pat }}
  #      ref: ${{ github.event.pull_request.head.ref || github.ref }}
  #      inputs: '{"release": "${{needs.build.outputs.release}}", "status": "passed" }'
